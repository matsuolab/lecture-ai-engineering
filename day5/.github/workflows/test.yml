name: ML Pipeline CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest great_expectations pandas scikit-learn flake8 black mypy pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        flake8 day5/演習3 --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 day5/演習3 --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check day5/演習3
    
    - name: Run data tests
      run: |
        pytest day5/演習3/tests/test_data.py -v
    
    - name: Run model tests
      run: |
        pytest day5/演習3/tests/test_model.py -v
        
    - name: Generate test report
      if: always()
      run: |
        cd day5/演習3
        echo "# テスト実行結果" > test_report.md
        echo "実行日時: $(date)" >> test_report.md
        echo "## テスト結果サマリー" >> test_report.md
        python -m pytest tests/test_data.py tests/test_model.py -v --no-header --no-summary | grep -E "(PASSED|FAILED|SKIPPED)" >> test_report.md
        
    - name: Upload test report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: day5/演習3/test_report.md 