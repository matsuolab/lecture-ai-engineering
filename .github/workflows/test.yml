name: ML Pipeline CI

on:
  # push:
  #   branches: [ main, master  ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest great_expectations pandas scikit-learn flake8 black mypy pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        flake8 day5/演習3 --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 day5/演習3 --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Format check with black
      run: |
        black --check day5/演習3
        
    #- name: Run data tests
      #run: |
        #pytest day5/演習3/tests/test_data.py -v
        
    #- name: Run model tests
      #run: |
        #pytest day5/演習3/tests/test_model.py -v -s

    - name: Run Pytest
      run: pytest

    - name: Generate Summary from Pytest Report
      run: python .github/scripts/generate_pytest_summary.py
      working-directory: ${{ github.workspace }}
      env:
        GITHUB_STEP_SUMMARY: ${{ env.GITHUB_STEP_SUMMARY }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_RUN_ID: ${{ github.run_id }}

    - name: Clean up generated files
      if: always()
      run: |
        if [ -f models/titanic_model.pkl ]; then
          rm models/titanic_model.pkl
        fi
        if [ -f report.json ]; then
          rm report.json
        fi
        if [ -d test_results ]; then
          rm -rf test_results
        fi
      shell: bash